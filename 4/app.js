// Если переменная объявлена внутри блока кода {...}, то она видна только внутри этого блока.

{
  // выполняем некоторые действия с локальной переменной, которые не должны быть видны снаружи

  let message = "Hello"; // переменная видна только в этом блоке

  alert(message); // Hello
}

alert(message); // ReferenceError: message is not defined

{
  // показать сообщение
  let message = "Hello";
  alert(message);
}

{
  // показать другое сообщение
  let message = "Goodbye";
  alert(message);
}

// Для if, for, while и т.д. переменные, объявленные в блоке кода {...}, также видны только внутри:

if (true) {
  let phrase = "Hello";

  alert(phrase); // Hello
}

alert(phrase); // Ошибка, нет такой переменной!

//Замыкание – это функция, 
// которая запоминает свои внешние переменные и может получить к ним доступ. 
// В некоторых языках это невозможно, или функция должна быть написана специальным образом, 
// чтобы получилось замыкание. Но, как было описано выше, в JavaScript, 
// все функции изначально являются замыканиями (есть только одно исключение, 
// про которое будет рассказано в Синтаксис "new Function").